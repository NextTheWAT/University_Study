컴퓨터 구조 4주차 정리

3주차 에 대한 복습
- 컴퓨터구조의 개념과 특징을 이해하고, 컴퓨터구조를 활용한 시스템 설계.  
- 논리 게이트의 동작 원리와 진리표, 게이트 기호를 이해하고 이를 활용할 수 있다. 
- 곱의 합과 최소항, 합의 곱과 최대항의 개념을 이해하고 이를 활용할 수 있다.
- 여러 가지 조합 논리 회로의 동작 원리를 이해하고 응용 회로를 설계할 수 있다. 
- 여러 가지 순서 논리 회로의 동작 원리를 이해하고 응용 회로를 설계할 수 있다. 

논리 게이트의 개념과 종류, 논리 연산순위 1번째 : ( )@

NOT 게이트 논리 연산순위 2번째 : NOT@
- 한 개의 입력과 한 개의 출력을 갖는 게이트로 논리 부정을 나타낸다. 
- NOT 게이트를 인버터(inverter)라고도 한다.

AND 게이트 논리 연산순위 3번째 @
- 입력이 모두 1인 경우에만 출력이 1이고, 
  입력 중 0이 하나라도 있으면 출력은 0이 되는 논리곱이다.

NAND 게이트   AND의 부정 
- 입력이 모두 1인 경우에만 출력이 0이고, 입력에 0이 하나라도 있는 경우는 모두 출력이 1이다.
- AND 게이트와 반대로 동작하여 NOT-AND의 의미로 NAND 게이트라고 한다. 

OR 게이트 논리 연산순위 4번째 @
- 입력이 모두 0인 경우에만 출력이 0이고, 입력 중 1이 하나라도 있으면 출력은 1이 되는 논리합이다. 
@A+B 는 A OR B로 읽는다.  OR연산@

NOR 게이트
- 입력이 모두 0인 경우에만 출력이 1이고, 입력에 1이 하나라도 있는 경우는 모두 출력이 0이다. 
- OR 게이트와 반대로 동작하여 NOT-OR의 의미로 NOR 게이트라고 한다. 

XOR 게이트 (eXclusive OR gate)
- 입력에 1이 홀수 개이면 출력이 1이고, 짝수 개이면 출력이 0이다.
- 2입력 XOR 게이트는 두 입력 중 하나가 1이면 출력이 1이고, 두 입력 모두 0이거나 1인 경우에만 출력이 0이 되는 것이다. 

XNOR 게이트 (eXclusive NOR gate) = XOR 의 부정
- 입력에 1이 짝수 개이면 출력이 1이고, 홀수 개이면 출력이 0이다. 
- XOR 게이트에 NOT 게이트를 연결한 것과 출력이 같으므로 XOR 게이트와 반대다. 
- 2입력 XNOR 게이트는 두 입력이 다르면 출력이 0이고, 두 입력이 같으면 출력이 1이라고 생각하면 쉽다. 

AND 게이트 구성 4-11p
- AND 게이트의 논리식 "F=AB"를 이중 부정하고 드모르간의 정리를 적용해 "F=AB=" ("AB" ) ̿"=" ("A"  ̅"+" "B"  ̅ ) ̅로 변형하여 논리 회로를 구성한다.

OR 게이트 구성 4-11p
- OR 게이트의 논리식 "F=A+B"를 이중 부정하고 드모르간의 정리를 적용해 "F=A+B=" ("A+B" ) ̿"=" ("A"  ̅"B"  ̅ ) ̅로 변형하여 논리 회로를 구성한다.

XOR 게이트 구성 4-12p
- 2입력 XOR 게이트의 논리식은 "F=" "A"  ̅"B+A" "B"  ̅로, 두 입력이 
  모두 0이거나 1이면 출력이 0이 된다. 이 논리식을 불 대수 법칙으로 다음과 같이 정리하여 논리 회로를 구성한다.


와이어드 로직
- 집적 회로(IC)에서는 대부분 NAND나 NOR 게이트 형태로 구성한다. 
- 둘 이상의 NAND 또는 NOR 게이트의 출력을 연결해 특정 논리 함수를 수행하는 
  형태를 @와이어드 로직@(wired logic)이라고 한다.

불 대수
- 기본적인 불 대수식은 AND, OR, NOT을 이용하여 표현 
- AND식은 곱셈의 형식으로 표현하고, OR 식은 덧셈의 형식으로 표현
- NOT식은 "A"  ̅ 또는 Aˊ 로 표현
- 완전한 논리식은 입력 항목들의 상태에 따른 출력을 결정하는 식
** 불 대수   0 (False) 과 1(True) 만 있다고 가정

불 대수 법칙 @@ 4-15~17p
- 불 대수의 모든 항은 0 또는 1을 갖는다. 
- [표 3-1]은 증명 없이 사용하기로 한 AND와 OR의 불 대수 공리다.

진리표를 이용한 드모르간의 정리 증명 4-19p

불 대수식의 표현 형태
- 곱의 합과 최소항
   - @곱의 합@(SOP, Sum Of Product)은 1단계인 입력이 AND항(곱의 항)으로 구성되고, 
      2단계인 출력이 OR항(합의 항)으로 만들어진 논리식이다.

- 최소항
    - @최소항@(minterm)은 입력 변수를 모두 포함하는 AND항이다. 
    - 최소항은 입력이 0이면 입력 변수의 부정을 쓰고, 입력이 1이면 입력 변수를 그대로 쓴 후 AND로 결합한다. 
    - 예를 들어 입력 변수가 A, B일 때 만들 수 있는 최소항은 "A"  ̅"B"  ̅, "A"  ̅"B" , "A" "B"  ̅, AB 다.

최소항 식 4-23p
- 최소항 식은 출력이 1이 되는 항의 입력 변수를 AND 연산하고, 각 항을 OR 연산하는 식이다.

합의 곱과 최대항
- @합의 곱@(POS, Product Of Sum)은 1단계인 입력이 OR항(합의 항)으로 구성되고, 
  2단계인 출력이 AND항(곱의 항)으로 만들어진 논리식이다.

최대항
- 최대항(maxterm)은 입력 변수를 모두 포함하는 OR항이다. 
- 최대항은 입력이 0이면 입력 변수를 그대로 쓰고, 입력이 1이면 입력 변수의 부정을 쓴 후 OR로 결합한다. 
- 예를 들어 논리 변수가 A, B일 때 만들 수 있는 최대항은 (A+B), "(A+" "B"  ̅")", "(" "A"  ̅"+B)", "(" "A"  ̅"+" "B"  ̅")" 다.

최대항 식
- 최대항 식은 출력이 0이 되는 항의 입력 변수를 OR 연산하고, 각 항을 AND 연산하는 식이다.

최소항과 최대항의 관계
- 최소항 식은 출력이 1인 항을 곱의 합(SOP)으로 나타낸 것이고, 최대항 식은 
  출력이 0인 항을 합의 곱(POS)으로 나타낸 것이다. 
- 따라서 최소항과 최대항은 서로 보수의 성질을 띤다고 할 수 있다.

데이터 형태에 따른 분류
- 조합 논리 회로의 개요
   - 조합 논리 회로(combinational logic circuit)는 현재 입력 값으로 출력이 결정되는 회로

조합 논리 회로의 개요
- 조합 논리 회로(combinational logic circuit)는 현재 입력 값으로 출력이 결정되는 회로


조합 논리 회로의 종류

반가산기
- 반가산기(Half-Adder, HA)는 1자리 2진수 2개를 입력하여 합(S)과 
  캐리(Carry, C)를 출력하는 조합 논리 회로

전가산기
- 전가산기(Full-Adder, FA)는 2진수 입력 A, B와 아랫자리에서 올라온 캐리 Ci를 
  포함하여 1자리 2진수 3개를 더하는 조합 논리 회로

반감산기
- 반감산기(Half-Subtractor, HS)는 1비트 2진수 A에서 B를 빼 차(D)와 빌림 수(K)를 계산하는 뺄셈회로

전감산기
- 전감산기(Full-Subtractor, FS)는 2진수 입력 A, B와 아랫자리로 빌려주는 수 Ki를 포함하여 A-B-Ki를 계산하는 조합 논리 회로

비교기
- @2진 비교기@(comparator)는 두 2진수 값의 크기를 비교하는 회로다

멀티플렉서
- @멀티플렉서@(multiplexer, MUX )는 여러 개의 입력선들 중에서 하나를 선택하여 
  출력선에 연결하는 조합논리회로이다. 선택선들의 값에 따라서 특별한 입력선이 선택된다. 
- 멀티플렉서는 많은 입력들 중 하나를 선택하여 선택된 입력선의 2진 정보를 
  출력선에 넘겨주기 때문에 @데이터 선택기@(data selector)라 부르기도 한다. 
- @디멀티플렉서@(demultiplexer, DEMUX ) 는 정보를 한 선으로 받아 2n 개의 가능한 
  출력 선들 중 하나를 선택하여, 받은 정보를 전송하는 회로다. 

코드 변환기 (2진 코드 → 그레이 코드 변환) 4-35p
코드 변환기 (그레이 코드 → 2진 코드 변환) 4-36p
코드 변환기 (BCD 코드 → 3초과 코드 변환) 4-37p

데이터 전송 시스템 4-38p

ROM을 사용한 조합 논리 회로의 설계 4-39p
- 다음 불 함수를 ROM을 사용해 구현하는 예



















