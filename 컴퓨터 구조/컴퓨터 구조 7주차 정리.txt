컴퓨터 구조 7주차 정리

파이프라이닝 시험에 안나옴

레지스터 전송(LOAD, STORE, MOVE 명령 등)
3가지 레지스터 전송 명령 : LOAD, STORE, MOVE 
LOAD : 주기억 장치에서 레지스터로 데이터를 읽음
STORE : 레지스터에서 주기억 장치로 데이터를 저장
MOVE : 레지스터에서 레지스터로 데이터를 이동
인텔 프로세서는 이 세 가지를 MOVE 명령으로 모두 처리한다. @
MOVE 명령어를 사용하여 데이터 교환이나 데이터형 변환이 가능하다.


명령어 형식
연산 코드(opcode), 오퍼랜드(operand), 피연산자 위치, 연산 결과의 저장 위치 
 등 여러 가지 정보로 구성
0-주소 명령어@
- 연산에 필요한 오퍼랜드 및 결과의 저장 장소가 묵시적으로 지정된 경우 : 스택(stack)을 갖는 구조(PUSH, POP) 
- 스택 구조 컴퓨터에서 수식 계산 : 역 표현 (reverse polish)


데이터를 복사하는 이유 @
변수에 값 할당 : A=B는 메모리 주소 B의 값(데이터)을 A 장소로 복사한다는 의미다. 


프로시저 호출(procedure call) 명령
어셈블리에서는 서브루틴(subroutine), C 언어에서는 함수(function), 자바에서는 메서드(method)라고 함
- 프로시저 호출 명령이 복귀 주소와 함께하는 가장 좋은 방법은 스택 @


루프 제어 명령@
명령 그룹을 정해진 횟수만큼 실행해야 하는 경우
루프(loop)를 통해 매번 일정하게 증가 시 또는 감소시키는 카운터 소유


DMA(Direct Memory Access) 입출력@
버스에 직접 액세스할 수 있는 방법: 시스템에 DMA 제어기 추가
DMA 칩은 내부에 레지스터 최소 4개 보유 : 프로세서에서 실행되는 소프트웨어로 로드 가능
 첫 번째는 읽거나 쓸 메모리 주소 포함
 두 번째는 얼마나 많은 바이트(또는 워드)가 전송되는지 계산
 세 번째는 사용할 장치 번호 또는 입출력 공간 주소를 지정
 네 번째는 입출력 장치에서 데이터를 읽거나 쓰는 여부를 지정


즉시 주소 지정 @
장점 : 오퍼랜드를 인출을 위한 메모리 참조가 필요 없음
단점 : 상수만 가능, 상수 값의 크기가 필드 크기로 제한
작은 값의 정수를 지정하는 데 많이 사용


직접 주소 지정(direct addressing mode)@
메모리에 위치한 오퍼랜드의 전체 주소 지정


레지스터 주소 지정(register addressing mode)@
직접 주소 지정과 개념은 같고 그 위치가 메모리 대신 레지스터
가장 일반적인 주소 지정 방식: 
- 레지스터는 액세스가 빠르고 주소가 짧기 때문


레지스터 간접 주소 지정(register indirect addressing mode)@
직접 주소를 명령어에는 포함하지 않음
- 메모리의 주소는 레지스터에 저장: 포인터(pointer)
- 레지스터 간접 주소 지정의 가장 큰 장점 : 명령어에 전체 메모리 주소가 없어도 메모리 참조가능


실제 프로세서에서 주소 지정 방식 @ 7-24p
Core i7, ARM 및 AVR에서 사용되는 주소 지정 방식


CISC와 RISC 특징 비교 @ 7-25p




 
마이크로 프로그램 제어 장치의 종류 @
수평적 마이크로 프로그램
수평적 마이크로 프로그램의 특징
- 제어 워드가 더 길다.
- 병렬 처리 응용에 사용된다.


수직적 마이크로 프로그램 7-2-10p @
- 수직적 마이크로 프로그램의 특징
   - 제어 워드가 더 짧다.
   - 유연하므로 새로운 제어 신호를 추가하기 용이
   - 낮은 수준의 병렬화 사용
   - 제어 신호를 생성하는 추가적인 하드웨어 필요 -> 수평적 마이크로 프로그래밍보다 느림








