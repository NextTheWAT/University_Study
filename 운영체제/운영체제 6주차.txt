운영체제 6주차


서술형 4문제 코딩1문제


교착상태의 개념
- 다중 프로그래밍 시스템에서 프로세스가 결코 일어나지 않을 사건을 기다리는 상태
- 프로세스가 교착 상태에 빠지면 작업 정지되어 명령 진행 불가
- 운영체제가 교착 상태 해결 못하면, 시스템 운영자나 사용자는 작업 교체, 종료하는 외부 간섭으로 해결해야함
- 하나 이상의 작업에 영향을 주어 무한 대기, 기


프로세스의 자원 사용 순서
1. 자원 요청 : 프로세스가 필요한 자원 요청 해당 자원 다른 프로세스가 사용 중이면 요청을 수락 때까지 대기
2. 자원 사용 : 프로세스가 요청한 자원 흭등하여 사용


스풀링 - 두 장치간의 속도 차이때문에 나온 것@@

컴퓨터 시스템에서 교착 상태의 발생 예
- 스풀링 시스템에서 발생하는 교착 상태
	- 스풀링 시스템 쉽게 교착 상태에 빠짐. 디스크에 할당된 스풀 공간의 출력 완료하지 않은 상태에서
		다른 작업이 스풀 공간 모두 차지하면 교착 상태 발생.
	- 스풀링 처리부에 공간 넉넉하면 교착 상태 발생률 감소하나 비용 많이 듬. 이때는 스풀링 ㅏ일의 일정
		포화 -임계치- 설정하여 교착 상태 예방 가능.
- 디스크를 공유할 때 발생하는 교착 상태
	- 디스크 사용에 제어가 없으면 프로세스들이 서로 충돌하는 명령 요청할 때 교창 상태 발생


교창 상태 발생의 네가지 조건@
1. 상호 배제
- 자원을 최소 하나 이상 비공유. 즉, 한 번에 프로세스 하나만 해당 자원 사용할 수 있어야함
- 사용 중인 자원을 다른 프로세스가 사용하려면 요청한 자원 하제될 때 까지 대기
2. 점유와 대기
- 자원을 최소한 하나 정도 보유, 다른 프로세스에 할당된 자원 얻으려고 대기하는 프로세스 있어야 함
	- 하 나를 가지고 있으면서 다른것을 또 가지려고함
	- 두 가지를 한번에 사용 ㄴㄴ 자기 일이 끝나야 다른것을 할수있음
3. 비선점
- 자원 선점 불가. 즉, 자원은 강제로 빼앗을 수 없고, 자원 점유하고 있는 프로세스 끝나야 해제
	- ex) 공용으로 사용 가지는순간 평생가져가는 느낌 주인이 없기때문에 그럼 ex) 화장실
4. 순환(환형)대기
	- 서로 갖고있으면서 계속 순환됨


상호배제 : 돌 하나를 한 사람만 디딜 수 있음
점유와 댁 : 각 사람은 돌 하 나를 딛고 다음 돌을 요구
비선점 : 사람이 딛고 있는 돌을 강제로 제거할 수 없음
순환 대기 : 왼쪽에서 오는 사람은 오른쪽에서 오는 사람 기다리고, 오른쪽에서 오는 사람도 왼쪽에서 오는 사람을 기다림

교착 상태 해결 방법
1. 둘 중 한 사람이 되돌아간다(복귀)
2. 징검다리 반대편을 먼저 확인하고 출발한다.
3. 강의 한편에 우선순위를 부여


프로레스의 정의
- IBM 운영체제에서의 작업
- 실행 중인 프로그램 (가장 일반적인 정의)



스케줄링의 개념
- 여러 프로세스가 번갈아 사용하는 자원을 어떤 시점에 어떤 프로세스에 할당할지 결정
- 자원이 프로세서인 경우를 프로세서 스케줄링, 대부분의 스케줄링이 프로세서 스케줄링의미
- 스케줄링 방법에 따라 프로세서를 할당받을 프로세스 결정하므로 스케줄링이 시스템의 성능에 영향 미침
- 좋은 스케줄링은 프로세서 효율성 높이고, 작업(프로세스)의 응답시간 최소화하여 시스템의 작업 처리 능력 향상
- 스케줄링이 필요없는 프로세스(인터럽트 처리, 오류 처리, 사용자의 시스템 호출 등)의 사전 처리가 대표적
- 반면에 스케줄링이 필요한 프로세스에는 사용자 프로세스와 시스템 호출로 발생하는 시스템 프로세스가 있음


버퍼링(내부장치) = 스풀링(외부장치) 의미는 비슷함
둘다 두 장치의 속도차이때문에 그렇다


일괄처리 - 중앙처리장치가 비싸기 때문에 계속 돌릴려고 하기때문 /아직도 사용
		- 한꺼번에 모아놓고 한번에 처리한다 -
다중처리 - 여러작업을 처리하려면 여러개를 동시에 수행해야하는 조건이 필요
		- 다중사용자 / 서버 or DB는 쉐어링이 있어야 서버랑 DB의 의미가 있다
실시간처리 - 여러사용자가 사용하는데 느리면 의미가 없다 / 빨라야함 중요 분산도 필요



슈퍼 컴퓨터
- 과학기술 분야에 이용
- 가장 빠른 계산 속도와 가장 큰 자료 처리 용량을 가짐

메인 프레임 컴퓨터
- 대용량의 정보를 처리
- 수백 개의 터미널을 연결 다수의 사용자가 동시에 자료처리

미니컴퓨터
- 메인 프레임 컴퓨터에 비해 용량이 적음


워크스테이션(Workstation) / 부터 중요한 컴퓨터 (서버 컴퓨터)
- UNIX
- Multi-processing
- Multi-user
- Networking

퍼스널컴퓨터 (Personal Computer) / 덜중요 안나옴
- 개인용으로 사용
- Windows
- Mac



중대형커뮤터와 운영체제

운영체제
- 유닉스
- 리눅스

역할
- 시스템 관리 (명령어처리 포함)
- 자원 관리
- 장치 관리

운영체제
- 유닉스 (C언어로 만들어짐)
특징
- 단순성
- 이식성 (간이식 등등 비슷 구조화 되어있기 때문에)
- 개방성
- 다중성


정보 표현
코드
- 문자, 숫자, 기호의 2진 표현의 약속
- 0과 1로 표현

영문
- ASCII 코드


cmd 명령어
? - 와일드카드
t . ?xe
ex) axe, exe 등등 찾음


운영체제 역사 X


유닉스 운영체제 특징
- 대화형 시스템
- 다중 사용자 시스템
- 다중 작업 시스템
- 높은 이식성과 확장성
- 계층적 트리 파일 시스템 @@
- 다양한 부가 기능 제공


운영체제
- 하드웨어 자원 관리
- 프로그램 실행 환경 제공

커널
- 운영체제의 핵심
- 컴퓨터 자원 관리
- 프로세스 관리, 메모리 관리
- 파일 시스템 관리, 장치 관리

쉘
- 사용자 인터페이스 제공
- 사용자 명령을 입력
- 결과를 출력

유틸리티 x	 - 명령어 해석기


단계
	유틸리티
	쉘
	커널
	하드웨어


유닉스 시스템 V x

유닉스 BSD x

리눅스 x


저급언어 - 컴퓨터가 이해하기 쉽게 작성된다 . : 기계어
		- 어셈블리어
고급언어 - 사람이 이해하기 쉽게 작성된다. : C, C++, C#, Java등

POSIX x



운영체제와 빅데이터의 관계
- 대용량 데이터 처리
- 분산시스템
- 신속한 데이터 처리








