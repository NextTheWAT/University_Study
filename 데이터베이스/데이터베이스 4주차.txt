데이터베이스 4주차


관계 대수
- Relational algebra
- 관계 데이터 연산
- 릴레이션을 처리하기 위한 연산의 집합
	- 데이터 처리 요구를 질의(query)라고 함
- 피연산자와 연산 결과가 모두 릴레이션;
	폐쇄 성질(closure property) -> 중첩된 수식 표현 가능
	- 피연산자 - 2 + 3 = 5 라면 피연산자는 정수이다.
	- 폐쇄 성질이 중요한 이유는 여러가지 데이터형식을 가져와 데이터화 시킨다?
- 일반 집합 연산자 : 
	- 합집합, 교집합, 차집합, 카티션 프로덕트
- 순수 관계 연산자:
	- 실렉트, 프로젝트, 조인, 디비전
- 관계 대수는 DBMS에게 사용자가 원하는 바를 표현하는 데이터 언어로 사용될 수 있음.


일반 집합 연산자

합집합
• Union, ∪
• 𝑅 ∪ 𝑆 ＝ 𝑡 𝑡 ∈ 𝑅 ∨ 𝑡 ∈ 𝑆 }
– 릴레이션 𝑅 또는 릴레이션 𝑆에 속하는 튜플 𝑡 로 구성되는 릴레이션
• 차수(𝑅 ∪ 𝑆) = 차수(𝑅) = 차수(𝑆)
• 카디널리티: |𝑅 ∪ 𝑆| ≤ |𝑅| + |𝑆|
	- @차수와 카디널리티가 어떻게 달라지는지 잘 알아두자.

교집합
• Intersection, ∩
• 𝑅 ∩ 𝑆 ＝ { 𝑡 | 𝑡 ∈ 𝑅 ∧ 𝑡 ∈ 𝑆 }
– 두 릴레이션 𝑅과 𝑆에 동시에 속해 있는 튜플
t로만 구성된 릴레이션
• 차수(𝑅 ∩ 𝑆) = 차수(𝑅) = 차수(𝑆)
• |𝑅 ∩ 𝑆| ≤ min (|𝑅| , |𝑆|)

차집합
• Difference, −
• 𝑅 − 𝑆 = 𝑡 𝑡 ∈ 𝑅 ∧ 𝑡 ∉ 𝑆 }
– 릴레이션 𝑅에는 있지만 𝑆에는 없는 튜플 𝑡로
만 구성된 릴레이션
• 차수(𝑅 − 𝑆) = 차수(𝑅) = 차수(𝑆)
• |𝑅 − 𝑆| ≤ |𝑅|

카티션 프로덕트
• Cartesian product, ×
• 𝑅 × 𝑆 ＝ { 𝑟 · 𝑠 | 𝑟 ∈ 𝑅 ∧ 𝑠 ∈ 𝑆 }
– 릴레이션 𝑅에 속한 각 튜플 𝑟에 대해 𝑆에 속한 각 튜플 𝑠를 모두 연결(concatenation; ·) 
시킨 튜플 𝑟 · 𝑠로 구성된 릴레이션
▪ 𝑟 = < 𝑎1, 𝑎2, … , 𝑎𝑛 >, 𝑠 = < 𝑏1, 𝑏2, …, 𝑏𝑚 >
▪ 𝑟 · 𝑠 = < 𝑎1, 𝑎2,… , 𝑎𝑛, 𝑏1, 𝑏2, … , 𝑏𝑚 >
– 차수(𝑅 × 𝑆) = 차수(𝑅) + 차수(𝑆)
– |𝑅 × 𝑆| = |𝑅| × |𝑆|
	- 곱하기 곱하기라 Attribute 값도 늘어나고, 전체적인 값이 커진다.
	- 매우 큰 릴레이션을 만드는 결합법이다.
	- 속성이 달라도 합병 가능하지않아도 무조건 결합시키는 것 이다.

합병 가능
- 다음 두 릴레이션에 대해 각 집합 연산이 가능할까? - 14p
- 합병 가능한 릴레이션만 합,차,교가 가능하다 속성값이 동일해야한다.


집합 연산자의 특징
• 합집합, 교집합, 차집합 연산자의 피연산자 릴레이션은 서로 합병 가능(unioncompatible)해야 함
– 차수가 같아야 함
– 대응 속성 쌍별로 도메인이 같아야 함
• ∪, ∩, × 연산은 교환적(commutative)임
– 𝑅 × 𝑆 ＝ 𝑆 × 𝑅
• ∪, ∩, × 연산은 결합적(associative)임
– 𝑅 ∪ 𝑆 ∪ 𝑇 ＝ (𝑅 ∪ 𝑆) ∪ 𝑇 ＝ 𝑅 ∪ (𝑆 ∪ 𝑇)


순수 관계 연산자

셀렉트
• Select, 𝜎
• 𝜎조건(𝑅)
• 릴레이션에서 주어진 조건을 만족하는 튜플들을 선택하는 연산
• 실렉트의 결과는 선택 조건을 만족하는 릴레이션의 @수평적 부분집합(horizontal subset)
	- 차수는 변하지 않는다. 차수 = 속성
	- 카디널리티는 작거나 같아진다. 셀렉트를 수행했을때

프로젝트
• Project, 𝜋
• 𝜋속성 리스트(𝑅)
- 릴레이션에서 속성 리스트에 제시된 속성만을 추출하는 연산
- 릴레이션의 @수직적 부분집합(vertical subset)
- 결과에 튜프링 중복되는 경우에는?
	- 제거됨; 결과도 튜프르이 집합(릴레이션)@

조인
• Join, ⋈
- @공통 속성@을 중심으로 두 릴레이션을 하나로 합쳐 새로운 릴레이션을 만듦
	- 공통 속성 : @조인 속성
- 여러 종류의 조인 연산이 존재함
- 공통 속성을 중심으로 두 릴레이션을 하나로 합친다, 카티션 프로덕트와 다른점이다.

세타 조인
- Theta join
- 일반화된 조인 연산 표현 
 𝑅 ⋈𝐴𝜃𝐵 𝑆			𝑅 ⋈𝐴>𝐵 𝑆
	– 𝜃: 조인 조건에 사용되는 @비교 연산자@
		▪ =, <>, <=, <, >=, >
	– 𝐴, 𝐵: 조인 속성(join attribute)
• 결과 차수 = 𝑅의 차수 + 𝑆의 차수

동등 조인
• Equijoin; 동일 조인, 𝑅 ⋈𝐴=𝐵 𝑆
	– 세타 조인에서 𝜃가 =인 조인
• 일반적으로 조인이라 하면 동등 조인을 의미
	– 𝑅 ⋈ 𝑆 = 𝑅 ⋈𝐴=𝐵 𝑆
• 내부 조인(inner join)이라고도 부름

자연 조인
• Natural join, 𝑅 ⋈𝑁 𝑆
• 동등 조인의 결과에서 조인 속성이 한 번만 나타나게 하는 연산
	- Ex) 고객아이디(속성)가 2개가 아니라 1개만 나옴 그것이 차이점

조인
- 조인 연산을 다른 연산으로 대체할 수 있을까?
	𝑅 ⋈𝐴𝜃𝐵 𝑆 =  R와S의 카티션 프로덕트로 곱해주고, A세타B를 해준다.


디비전
• Division, 𝑅 ÷ 𝑆		6 ÷ 2 = 3 × 2 ÷ 2 = 3
• 𝑅(𝑎1, 𝑎2, … , 𝑎𝑚, 𝑏1, 𝑏2, … , 𝑏𝑛)
	– 차수=𝑚 + 𝑛
• 𝑆(𝑏1, 𝑏2, … , 𝑏𝑛)
	– 차수=𝑛
• 𝑅 ÷ 𝑆 = 𝑇(𝑎1, 𝑎2, … , 𝑎𝑚)
	– 릴레이션 𝑆의 모든 튜플과 관련 있는 릴레이션 R의 튜플
		▪ 𝑆에 속하는 모든 튜플 s에 대해 t ∙ s가 R에 존재하는 튜플 𝑡들의 집합
			– 차수=𝑚


관계 대수의 확장

세미 조인
• Semijoin, ⋉
• 𝑅(𝑋)에 대한 𝑆(𝑌)의 세미 조인: 𝑅 ⋉ 𝑆
• 𝑆와의 자연 조인에 참여할 수 있는 𝑅의 투플만 선택
	– 릴레이션 𝑆의 조인 속성만 프로젝트한 릴레이션을 릴레이션 𝑅에 자연 조인함
		𝑅 ⋉ 𝑆 = 𝑅 ⋈𝑁 (𝜋𝑋∩𝑌 (𝑆))
			= 𝜋𝑋 (𝑅 ⋈𝑁 𝑆)

외부 조인
- Outer join
	- 한 릴레이션에 있는 튜플이 조인할 상대 릴레이션에 대응되는 튜플이 없을 경우,
		상대를 널(null) 튜플로 만들어 결과 릴레이션에 포함
	- 누락 정보를 처리하기 위한 조인의 확장
	- 왼쪽 외부 조인, 오른쪽 외부 조인, 완전 외부 조인

왼쪽 외부 조인
• R ⟕ S
	– 𝑅의 모든 튜플들을 결과에 포함시키고,
	– 릴레이션 𝑆에 관련된 튜플이 없으면 결과 릴레이션에서 릴레이션 𝑆의 속성들은 널 값으로 채움

오른쪽 외부 조인
• R ⟖ S
	– 𝑆의 모든 투플들을 결과에 포함시키고,
	– 릴레이션 𝑅에 관련된 튜플이 없으면 결과 릴레이션에서 릴레이션 𝑅의 속성들은 널 값으로 채움

완전 외부 조인
• R ⟗ S
• 𝑅과 𝑆의 모든 튜플들을 결과에 포함시키고, 
• 상대 릴레이션에 관련된 튜플이 없으면 결과 릴레이션에서 상대 릴레이션의 속성들은 널 값으로 채움


집계 함수
- SUM: 합계
- AVG: 평균
- MAX: 최대값
- MIN: 최소값
- COUNT: 개수

그룹핑
- 릴레이션은 그룹핑 속성 값에 의해 분할되고,
- 각 그룹에 속하는 튜플들에 대해 집계 함수를 적용
- GROUPaFb(R)
	- F: 집계 함수
	- a: 그룹핑 속성
	- b: 집계 함수 적용 대상 애트리뷰트
	a를 기준으로 집계함수를 사용하여 각 그룹별로 b속성으로 F를 적용해라


정리 문제 1: 질의 표현

다음 질의문을 관계 대수로 표현하시오.
- 등급이 gold인 고객의 이름과 나이를 검색하라.
	- 𝜋고객이름,나이 (등급='gold',(고객))
- 원유선 고객에 대해, 등급, 주문한 제품, 주문 수량을 검색하라.
	- 𝜋 등급,주문한제품,주문수량(원유선)
- 주문수량이 10개 미만인 내역을 제외한 주문 내역을 검색하라.
	- 𝜎주문수량 >=10(주문)
- <'delta','박성결','21','vip'> 고객을 삽입하라.
	- 고객 <- 고객 U {'delta','박성결','21','vip'}
- 아이디가 orange인 고객을 삭제하라.
	- 고객 <- 고객 - 𝜎아이디='orange'(고객)


정리문제 2: 질의 표현
- 모든 과목을 수강(등록)한 학생의 학번과 이름을 검색하는 질의를 관계 대수로 표현하시오.
	- 𝜋학번, 이름((𝜋학번, 과목번호(등록) / 𝜋과목번호(과목) ⟗ 학생)








	