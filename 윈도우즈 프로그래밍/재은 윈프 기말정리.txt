윈도우즈 프로그래밍이란

윈도우 운영체제 기반에서 구동되는 응용프로그램으로 이벤트에 의해 실행된다
윈도우는 GUI기반의 운영체제로 사용자가 아이콘 즉 그래픽을통해 컴퓨터와 정보를 교환한다
또한 메시지 구동 구조로 프로그래머가 정한 순서대로가 아닌 사용자가 어떠한 이벤트를 발생히켰을때 실행되는 구조를 가지고 있다


함수에 대하여

함수란 특정한 단위 작업을 수행하는 것 독립적으로 설계된 프로그램 코드의 집합이다
프로그램에서 함수를 사용하여 작성하면 코드의 가독성을 높일수있다
또한 반복적인 프로그래밍을 피할수 있으며 즉 여러 번의 같은 작업이 필요하다면 함수로 작성하는 것이 효율적이다


클래스와 객체

클래스란 데이터파트, 액션 파트로 구성되며 액션 파트는 함수를 의미한다
객체의 틀을 제공하며 함수는 활동성을 가지고있다 이로인해 스스로 활동이 가능하다
따라서 접근 한정자를 사용해 불법적인 접근을 막아주어야 한다


객체지향언어

객체를 만들고 사용하는 프로그래밍 언어로 프로그램을 다수의 객체를 만들어 이들이 상호작용 하는 방식을 사용한다
즉 프로그램이 부분 단위로 실행이 가능하며 이에 따라 적절한 접근 한정자를 사용해주는 것이 중요하다.


스크립트 언어: 코드 작성이 쉬움, 컴파일 수행 없이 바로 실행, 데이터 타입이 자유로움
java script, visual basic script, R 등

인터프리터 언어: 대화형 언어, 라인 단위 해석, 속도가 느림, 쉬운 문법
java, basic 등

컴파일러 언어: 컴파일 시 목적 프로그램이 생성된다, 빠른 속도, 엄격한 문법
c, c++ pascal 

컴파일러 언어(c,c++등 고급언어)
컴파일 시 목적프로그램을 생성하며 실행 프로그램으로 변환
이후 실행되며 빠른 속도를 가지고 있다
문법이 엄격한 편

인터프리터 언어(java,basic등 고급언어)
대화형 언어이며 라인 단위의 해석을 하기 때문에 속도가 느리다


하지만 쉬운 문법을 사용함
프로그램을 인터프리터가 번역 이후 바로 실행된다.

컴파일러의 특성
컴파일러란 고급 언어로 작성된 원시 프로그램을 기계어로 된 목적프로그램으로
출력하기 위해 사용하는 언어 번역 프로그램으로 프로그램의 모든 부분을 담당하지는 않는다.


연산자란

연산을 수행하기 위해 사용되는 문자.
계산을 할 때 사용되는 기호로 연산이란 프로그램에서 데이터를 처리하여 결과를 산출하는것


제어문이란

동작의 흐름을 제어하는 명령


반복문이란

제어문 중 하나로 프로그램 소스 코드 내에서 특정 부분의 코드가 반복적으로 수행할 수 있도록 하는 구문


확률에 대하여

확률이란 어떠한 일이 일어날 가능성을 측량하는 단위로 즉, 사건이 발생할 수 있는 비율을 의미한다.
확률은 과거의 수많은 데이터를 사용해 미래를 예측하기 위해서 사용하며 이것에 대한 증명은 불가능하다.
예측이 얼마나 올바른 예측인지에 대한 가능성을 수치로 표현한것


데이터 시각화

데이터 시각화는 데이터 분석 결과를 쉽게 이해할 수 있도록 시각적으로 표현하고 전달되는 과정을 말한다. 


데이터 분석

데이터를 정리하고 조작하고 변환하고 검사함으로서
유용한 정보를 도출하는작업


생성자
객체의 초기화를 담당하는 변수
객체를 생성할 때 자동적으로 호출되는 특수한 멤버 함수임





