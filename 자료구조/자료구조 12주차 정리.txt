자료구조 12주차 정리

시험 4,5,6장

스택 시험에 나옴 그림도 그려야함@@


스택의 원소 삽입@@ 알고리즘


순차 자료구조로 구현한 스택의 장점@
- 순차 자료구조인 1차원 배열을 사용하여 쉽게 구현

순차 자료구조로 구현한 스택의 단점
- 물리적으로 크기가 고정된 배열을 사용하므로 스택의 크기 변경 어려움
- 순차 자료구조의 단점을 가짐


연결 자료구조를 이용한 스택의 구현
- 단순 연결 리스트를 이용하여 구현
  - 스택의 원소 : 단순 연결 리스트의 노드
    - 스택 원소의 순서 : 노드의 링크 포인터로 연결
    - push : 리스트의 마지막에 노드 삽입
    - pop : 리스트의 마지막 노드 삭제 
 - 변수 top : 단순 연결 리스트의 마지막 노드를 가리키는 포인터 변수
    - 초기 상태 : top = null 
			top.link = null 초기 상태

연결 자료구조가 더 유리@

3. 스택의 응용: 스택을 이용한 역순 문자열 24p


시스템 스택
프로그램에서의 호출과 복귀에 따른 수행 순서를 관리
- 가장 마지막에 호출된 함수가 가장 먼저 실행을 완료하고 복귀하는 후입선출 구조이므로, 후입선출 구조의 스택을 이용하여 수행순서 관리
- 함수 호출이 발생하면 호출한 함수 수행에 필요한 지역변수, 매개변수 및 수행 후 복귀할 주소 등의 정보를 스택 프레임(stack frame)에 저장하여 시스템 스택에 삽입 
- 함수의 실행이 끝나면 시스템 스택의 top 원소(스택 프레임)를 삭제(pop)하면서 프레임에 저장되어있던 복귀주소를 확인하고 복귀
- 함수 호출과 복귀에 따라 이 과정을 반복하여 전체 프로그램 수행이 종료되면 시스템 스택은 공백스택이 됨

지역변수, 매개변수, 복귀주소
지금도 많이 쓰는 것 중요@


괄호 검사 33p
마지막에 아무것도 없으면 괄호검사가 잘 되고 끝난것
이렇게 괄호검사도 스택을 통해서 사용할수있다
이거는 시험에 안나옴


수식의 표기법@@@ 시험에 나옴
전위표기법(prefix notation) 
- 연산자를 피연산자를 앞에 표기하는 방법 
  예) +AB 

중위표기법(infix notation) 
- 연산자를 피연산자의 가운데 표기하는 방법 
  예) A+B 

후위표기법(postfix notation) 
- 연산자를 피연산자 뒤에 표기하는 방법 
  예) AB+ 

중,전,후 표기법
영어 알아두기@@
전위와 후위를 컴퓨터에서 사용함 시험에 나옴 이거 말고

AxB-C/D 이럴때 곱하기 나누기 빼기 순서
괄호를 쳐야함
((AxB) - (C/D)) 이런식으로
괄호 만나고 괄호 만나고 A만나고 곱하기가 왼쪽으로 (x(AB)) 이렇게
최종적으로
-(x(A B) / ( C D))

전위 표기법 
- x A B / C D 이렇게 됨

후위 표기법은 
최종적으로 A B x C D / -  이렇게 된다

자기 괄호 안에 있던건 그 옆으로 이동
이걸 컴퓨터에서 사용

시험에 나오는것 ex)
3 x 4 + 5 x 6 - 7 / 8

(3x4) + (5x6) - (7/8)
((3x4) + (5x6)) - (7/8)
(((3x4) + (5x6)) - (7/8))
-(+(x(34) x (56) / ( 7 8 ))
이렇게 바뀐다
최종적으로
- + x 3 4 x 5 6 / 7 8
전위 표기법 이런식으로 시험에 나옴@@@ 40p

후위 표기법으로 변환 알고리즘은 시험에 안나옴x 42p


chapter 6 큐

큐(Queue) @@@ 4p 그림도
- 스택과 비슷한 삽입과 삭제의 위치가 제한되어있는 유한 순서 리스트
- 큐는 뒤에서는 삽입만 하고, 앞에서는 삭제만 할 수 있는 구조
  - 삽입한 순서대로 원소가 나열되어 가장 먼저 삽입(First-In)한 원소는
    맨 앞에 있다가 가장 먼저 삭제(First-Out)됨
    ☞ -선입선출- 구조 (FIFO, First-In-First-Out)	

큐의 연산
- 삽입 : enQueue
- 삭제 : deQueue
5p 표 중요 외워두기 @@@

6p 디큐는 item이 없는 이유는 나가야하니까


순차 큐@@
- 1차원 배열을 이용한 큐
  - 큐의 크기 = 배열의 크기
  - 변수 front : 저장된 첫 번째 원소의 인덱스 저장
  - 변수 rear : 저장된 마지막 원소의 인덱스 저장

상태 표현  @@@ 외우기
  - 초기 상태 : front = rear = -1
  - 공백 상태 : front = rear
  - 포화 상태 : rear = n-1  (n : 배열의 크기, n-1 : 배열의 마지막 인덱스)








