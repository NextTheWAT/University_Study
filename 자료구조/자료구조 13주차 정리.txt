자료구조 13주차 정리

3장 조금 포함
연결 자료구조, 순차 자료구조 연결되는것 오버헤드 되는것
프로그래밍, 알고리즘
4장 많이 나옴

큐(Queue)@@
선입선출 구조

큐 그림 4p @@ 참고

큐의 연산
삽입 : enQueue
삭제 : deQueue
5p 표 나옴 @@@

front = rear 같다면 공백상태


순차 큐

상태 표현 @@@ 
초기 상태 : front = rear = -1
공백 상태 : front = rear
포화 상태 : rear = n-1 
무슨 상태인지 나올수있음@@

10p 나올수있음@
11p도
12p 알고리즘도 나올수있음@@
13p 도 @@

14p는 문제가 되는 것 그냥 알아두기

배열 자체의 문제점 알아두기 (순차 자료구조)


순차 큐의 잘못된 포화상태 인식의 해결 방법-2
1차원 배열을 사용하면서 논리적으로 배열의 처음과 끝이 연결되어 있다고 가정하고 사용 ⇒ 원형 큐

mod = 나머지
3개, 4개, 5개 이런식으로 나눌수있다

원형큐는 폐기시키지않고 계속 사용할수있는 장점이있음

21p @
순차큐, 원형큐 나올수있음@

22p@
23p@


연결 큐
단순 연결 리스트를 이용한 큐

큐의 원소 : 단순 연결 리스트의 노드
큐의 원소의 순서 : 노드의 링크 포인터로 연결
변수 front : 첫 번째 노드를 가리키는 포인터 변수 
변수 rear : 마지막 노드를 가리키는 포인터 변수

상태 표현 @@
초기 상태와 공백 상태 : front = rear = null

하지만 연결 큐는 메모리가 있는한 계속 무한대로 사용가능
순차 큐보다 연결 큐가 복잡하다

29p 나올확률 적음
연결 큐는 포화상태가 없음 무한대임 계속 연결할 수 있으니까

30p 나올확률 큼@@

33p @ 나올수도

데크는 시험에 안나옴

큐 물어보면 순서대로(선입선출) 꼭 들어가야함@@


운영체제의 작업 큐@

프린터 버퍼 큐Printer Buffer Queue
CPU에서 프린터로 보낸 데이터 순서대로(선입선출) 프린터에서 출력하기 위해서 선입선출 구조의 큐 사용









































