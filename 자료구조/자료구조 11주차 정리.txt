자료구조 11주차 정리


원형 연결 리스트의 개념
- 단순 연결 리스트에서 마지막 노드가 리스트의 첫 번째 노드를 가리키게 하여 리스트의 구조를 원형으로 만든 연결 리스트
   - 단순 연결 리스트의 마지막 노드의 링크 필드에 첫 번째 노드의 주소를 
     저장하여 구성 
   - 링크를 따라 계속 순회하면 이전 노드에 접근 가능
검색할때 단순 연결보다 검색할때 용이하다.

단순연결 리스트가 중요하기때문에
원형연결 리스트가 나올 확률이 적음
하지만 리스트 첫 번째 노드 삽입하는 알고리즘 나올수있음

원형 연결 리스트의 알고리즘
- 마지막 노드의 링크를 첫 번째 노드로 연결하는 부분만 제외하고는 단순 연결 리스트에서의 삽입 연산과 같은 연산
- 리스트에 첫 번째 노드로 삽입하는 알고리즘

temp.link =/= CL
CL이 temp.link를 찾을동안, 아닐동안


이중 연결 리스트의 개념 
- 양쪽 방향으로 순회할 수 있도록 노드를 연결한 리스트
- 이중 연결 리스트의 노드 구조와 구조체 정의
   - llink(left link) 필드 : 왼쪽 노드와 연결하는 포인터 
   - rlink(right link) 필드 : 오른쪽 노드와 연결하는 포인터 



스택(stack)
접시를 쌓듯이 자료를 차곡차곡 쌓아 올린 형태의 자료구조

스택(stack)@@@ 그림도@그림은 연탄
스택에 저장된 원소는 top으로 정한 곳에서만 접근 가능
top의 위치에서만 원소를 삽입하므로, 먼저 삽입한 원소는 밑에 쌓이고, 
나중에 삽입한 원소는 위에 쌓이는 구조
마지막에 삽입(Last-In)한 원소는 맨 위에 쌓여 있다가 가장 먼저 삭제(First-Out)됨 ☞ 후입선출 구조 (LIFO, Last-In-First-Out)

스택의 연산
스택에서의 삽입 연산 : push
스택에서의 삭제 연산 : pop




























