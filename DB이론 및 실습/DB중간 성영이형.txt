실습파일 정리
SQL(구조적 쿼리 언어):관계형 데이터베이스에 정보를 저장하고 처리하기 위한 프로그래밍 언어입니다.
SQL전문가:SQLP
SQL개발자:SQLD

데이터 아키텍처:데이터가 관리되는 방식(데이터가 어떤 구조로 저장, 관리되는 등)
DAsp:데이터 아키텍처 준전문가
DAP:데이터 아키텍처 전문가

DBMS : 사용자와 데이터베이스를 연결시켜 주는 소프트웨어
시스템 카탈로그 : 데이터베이스에 저장되어 있는 모든 데이터 개체들에 대한 정의 등 정보를 수록한 시스템 테이블
데이터 독립성 : 데이터의 물리적, 논리적 구조 등이 변경이 되어도 응용 프로그램에 영향을 주지 않음을 의미
데이터 모델 : 데이터가 저장되는 기법에 관한 내용
DBMS언어 : DDL, DML, DCL
ANSI/SPARC 아키텍처 : DBMS 구현에 사용되는 일반적인 아키텍처로 3단계로 이루어짐(외부, 개념, 내부 단계)
릴레이션 : 데이터의 집합을 의미(DB 테이블을 의미)

가장 점유율이 높은 DBMS - oracle (40-45%)
국내 DBMS의 종류 - 큐브리드, 알티베이스 등 (10% 미만)
관계형 DBMS - 관계형 데이터베이스는 서로 관련된 데이터 지점에 대한 접근을 제공하는 데이터베이스 유형
왜 관계라 하는가? 조인 검색이 가능하기 때문에 , 즉 다른 테이블끼리 연동이 가능한 것
자격증 종류
SQLD, SQLP, DAP등 국내 자격증
국외 OCA, OCP, OCM
빅데이터란 대량의 정형 또는 심지어 데이터베이스 형태가 아닌 비정형의 데이터 집합조차 포함한 
데이터로부터 가치를 추출하고 결과를 분석하는 기술

데이터베이스 사용 사례
1. 공간 데이터 베이스 : 이동 객체 처리, 모바일 GIS, 좌표 데이터
2. 실시간 데이터베이스 : 공정 관리 시스템
3. 분산 데이터베이스 : 백업 사이트
4. 센서스트림 데이터 베이스 : 변화하는 연속적인 데이터가 대량으로 유입되는 스트림 형태의 센서 데이터 (iot) 

지리정보시스템 그리고 공간 데이터베이스 시스템과의 차이
-인간생활에 필요한 지리정보를 컴퓨터 데이터로 변환하여 효율적으로 활용하기 위한 정보시스템 -> GIS
공간 데이터베이스는 GIS안에 있는 것? 

SQLite - 서버가 아니라 응용 프로그램에 넣어 사용하는 비교적 가벼운 데이터베이스

대학에서 사용하는 데이터베이스 응용업무 - 성적, 예비군, 수강..

학생, 교수, 수강, 설강 스키마에 들어 갈 속성값을 알아봅시다.
스키마? 데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 메타데이터 집합
학생(테이블=릴레이션)
  학번(주키), 이름, 학년, 학과, 주소 ..
교수(테이블=릴레이션)
  교번(주키), 이름, 학과, 전공, 주소..
설강(테이블=릴레이션)
  강의번호(키), 교과목, 강의실, 강의시간.., 교번(외래 키)(위의 교번와 연결ㅍㅍ) 관계!
   *관계설정 교수.교번 == 설강.교번
수강(테이블=릴레이션)
  강의번호(외래키), 학번(외래키), 학점    위의 강의번호,학번과 연결
  *강의번호+학번=주키(복합키)
외래키는 다른 테이블의 주키를 참조하는 키
-->데이터베이스 설계

자신이DB설계자라고가정하자.구성하고자하는 관리시스템은 무엇이며,스키마는 어떠한가?
헬스 스키마
트레이너(테이블=릴레이션)
  이름, 번호, ...
회원(테이블=릴레이션)
  이름, 번호, 담당 트레이너..
락커룸(테이블=릴레이션)
 번호, 사용자, ..

데이터 보안:무단 액세스 및 데이터 손상으로부터 데이터를 보호하는 프로세스
데이터의 중복이 필요한 이유: join연산의 비용을 줄여 질의 응답속도를 빠르게 하기 위함
데이터 무결성:데이터의 정확성과 일관성을 유지하고 보증하는 것
OODBMS:정보를 객체의 형태로 표현하는 데이터베이스 모델
//용어정리

수업 내용
//2주차
data : 관찰의 결과로 나타난 사실 그 자체의 값 즉 실제 값
정보 : 데이터에 의미를 부여한 것 (ex : 대학생 키의 평균) 기본 데이터를 논리적, 의미적인 것으로 산출한 데이터
지식 : 사물이나 현상에 대한 이해, 정보의 총합

데이터베이스 : 조직!에 필요한 정보를 얻기 위해 논리!적으로 연관된 데이터를 모아    !! (실습자료)  
구조!적으로 통합!해 놓은 것 (중요)

데이터 베이스 시스템은 데이터의 검색, 변경 작업을 주로 수행
변경 : 변하는 데이터 값을 데이터베이스에 반영하기 위해 삽입, 삭제, 수정등의 작업
변경 빈도가 많을수록 구축이 어려움

데이터의 종류
통합된 데이터 : 데이터를 통합하는 개념, 중복을 최소하여 데이터 불일치 현상을 제거
저장된 데이터 : 문서가 아닌 컴퓨터 저장장치에 저장된 데이터
운영 데이터 : 조직의 목적을 위해 현재 사용되는 데이터
공용 데이터 : 한 사람에 의해 사용되는 데이터가 아니라 공동으로 사용되는 데이터
->데이터베이스는 운영 데이터를 통합하여 저장하며 공용으로 사용

데이터베이스 특징(중요)
실시간 접근성 : 수 초 내에 결과를 사용자에게 서비스, 데이터베이스는 실시간으로 서비스
계속적인 변화 : 시간에 따라 데이터 값은 항상 변화, 삽입 삭제 수정등의 작업을 통해 바뀐 데이터 저장
동시 공유 : 여려 사용자에게 동시(병행)에 공유
내용에 따른 참조 : 물리적 위치가 아닌 데이터 값에 따라 참조

데이터베이스 시스템은 DBMS, 데이터베이스, 데이터 모델, 데이터베이스 사용자를 포함하는
가장 상위 시스템

//3주차
파일 시스템(데이터베이스 시스템 이전)  !실습자료
독립적으로 파일을 다루기 때문에 데이터를 파일 단위로 서버에 저장
데이터의 일관성 훼손 즉 불일치성 때문에 좋지 않다. DBMS는 이러한 불일치성이 적다.

데이터베이스 시스템 !! (실습자료)
DBMS를 도입하여 데이터를 통합 관리하는 시스템
데이터의 일관성 유지, 복구, 동시 접근 제어
데이터 쪽을 서버, 외부 요청쪽을 클라이언트
중복을 줄이고 무결성을 유지

웹 데이터베이스 시스템 
데이터베이스를 웹 브라우저에서 사용할 수 있는 상태
온라인 상거래, 공공 민원 서비스

분산 데이터베이스 시스템
DBMS가 하나가 아닌 여러곳에 존재하기 때문에 웹 데이터베이스 시스템과 구별
보안이 높다, 구축도 어려움 

1.데이터를 프로그램 내부에 저장
데이터를 프로그램 내부에 저장하게 되면 새로운 데이터가
생길 때 마다 프로그램을 수정 후 다시 컴파일해야함 ( 문제점 )

2.파일 시스템
파일 시스템을 사용하면 새로운 데이터가 추가되어도
프로그램 수정이 필요 없다. 하지만 한 파일을 공유 시 운영체제의 도움이 필요

DBMS 사용하면 위의 모든 문제 해결
데이터 구조가 변해도 다시 컴파일 할 필요가 없음

파일 시스템과 dbms비교 (표 참고)

DBMS 장점 (시험)
데이터 중복 최소화, 데이터 일관성 유지, 데이터 독립성 유지
관리 기능 제공, 프로그램 개발 생산성 향상, 무결성, 표준 준수

독립은 프로그램으로부터 데이터가 독립(간섭 x)

데이터베이스 시스템의 구성(그림 익히기)
DBA database administrator - 데이터베이스 관리자

데이터베이스 언어 (중요)                         
SQL(structured query language)
DDL - 데이터 정의어
DML - 데이터 조작어
DCL - 데이터 제어어

데이터베이스 사용자
일반 사용자(End user) - 대학의 학생, 민원 접수처 등, 프로그래머가 개발한 프로그램을 이용해 데이터베이스에 접근한 일반인
응용 프로그래머 - 일반 사용자가 사용할 수 있도록 프로그램을 만드는 사람
SQL사용자 - SQL을 사용하여 업무를 처리하는 담당자
DBA - 데이터베이스의 설계,구현,유지보수 등 시스템을 총괄하는 사람//중요


데이터 모델 - 데이터가 저장되는 기법에 관한 내용을 의미한다.

계층형 DBMS - 트리 형태의 구조로 조직된 데이터베이스 관리 시스템

네트워크 DBMS - 네트워크 상의 노드 형태로 표현한 데이터베이스 관리 시스템

관계 DBMS - 서로 관련된 데이터 지점에 대한 접근을 저장 및 제공하는 데이터베이스 관리 시스템

객체지향 DBMS - 정보를 객체의 형태로 표현하는 데이터베이스 관리 시스템

객체 관계 DBMS - 데이터 형과 메서드를 자유롭게 정의하여 데이터베이스를 개발할 수 있는 데이터베이스 관리 시스템

DDL(data definition language) - 데이터 정의어로 데이터 생성, 수정, 삭제등을 결정

DML(data manipultation language) - 데이터 조작어로 입력된 레코드를 조회, 수정, 삭제등의 역할

DCL(data control language) - 데이터 제어어로 DB에 접근하거나 객체에 권한을 주는 역할

DBA(데이터베이스 관리자) - 3주차 내용 참고

DDos - 분산 서비스 공격(패킷(쓰레기)을 계속 보내 과부화로 인한 속도 저하?)

웜 바이러스 -  스스로 복제되고 스스로 전파가능한 독립적으로 실행되는 프로그램

APT(지능형 지속 공격) - 컴퓨터 해킹 프로세스들의 집합(잠행적, 지속적), 특정 목표

Inforcon - 국방 사이버 방호 태세

트로이 목마 - 정상적인 프로그램으로 위장한 악성코드의 한 종류(악성 루틴이 숨어 있는)

파밍/스미싱 - 연결된 장치를 통해 절도를 시도하는 행위, 스미싱은 문자메시지를 이용한 피싱

크립토재킹 - 디지털 화폐를 채굴하기 위해 누군가의 장치를 무단으로 탈취하여 사용하는 것

누킹 - 특정 아이피에 대량의 패킷을 보내 인터넷 접속을 방해하는 크래킹의 일종이다.(인터넷 접속 끊김)

브루트 포스 - 조합 가능한 모든 문자열을 하나씩 대입해 보는 방식으로 암호를 해독하는 방법이다

제로데이 공격 - 새로운 취약점이 밝혀진 후 공식적인 보안 패치가 배포되기 전 시간적 여유 없이 감행되는 해킹 공격
//4장실습

//5장 실습
사물인터넷(internet of things) - 각종 사물에 센서와 통신 기능을 내장하여 인터넷에 연결하는 기술
빅데이터 -  거대한 규모(volume), 빠른 속도(velocity), 높은 다양성(variety)을 특징으로 하는 데이터
상황 인지 컴퓨팅 - 사용자 주변의 컴퓨팅 기기가 사용자의 현 “상황”을 올바 르게 인지함으로써 
 능동적으로 사용자에게 유용 한 서비스를 제공하는 컴퓨팅 기술

자신의 스키마와 속성 설계
헬스장 : 회원, 트레이너, 락커룸

Architecture(아키텍처) - 건축학, 즉 컴퓨터 시스템의 하드웨어 구조

ANSI/SPARC 아키텍처 - DB구조를 크게 외부 단계, 개념 단계, 내부 단계로 구분한 구조
데이터 독립성-DBMS의 궁극적인 목적으로 응용프로그램이 데이터에 종속되지 않는 것
데이터베이스시스템 아키텍처-????
중앙집중식 데이터베이스 시스템-일반적인 방식으로, 데이터베이스 시스템이 하나의 컴퓨터 시스템에서 운영
분산 데이터베이스 시스템-DBMS가 여러개 존재하는 것으로 보안이 좋지만 구현이 어렵다.
클라이언트-서버 데이터베이스 시스템-데이터 베이스가 하나이며, 데이터베이스 시스템의 기능이 서버와 클라이언트에 분산

공간 데이터베이스-공간에 존재하는 점, 선 등을 포함하는 객체의 데이터를 저장하고,검색하는데 최적화된 데이터베이스
웹 데이터베이스-데이터베이스를 웹 브라우저에서 사용할 수 있도록 서비스 하는 시스템
센서 데이터베이스-
통계 데이터베이스- 
XML 데이터베이스-데이터 지속성 소프트웨어 시스템으로, XML 형식으로 데이터를 지정하거나 저장
분자 데이터베이스-실험적으로 결정된 3차원 생물분자구조의 데이터베이스
데이터마이닝-데이터를 탐색하고 분석하여 의미 있는 패턴이나 규칙을 발견하는 것
모바일 데이터베이스-움직이는 데이터베이스, 데이터베이스가 이동 컴퓨팅 기기 내에서 작동되는 것

/강의내용
데이터베이스 시스템의 구성 중요
사용자, 인터페이스, DBMS, 데이터베이스 간의 관계 보기
DBMS에 데이터를 저장하는 방식이 가장 좋음
데이터 저장하는 방식의 장,단점 숙지

DBMS의 장점 중요
중복 최소화, 일관성 유지 등..

SQL - 데이터베이스 언어 
DDL, DML, DCL 

DBA(데이터베이스 관리자) 
데이터 설계,구현,유지보수 등 전 과정을 담당하는 즉 데이터베이스 시스템을 총괄하는 사람

DBMS기능(시험)
데이터 정의-데이터의 구조를 정의, 데이터 구조에 대한 삭제,변경
데이터 조작-소프트웨어가 요청하는 데이터의 검색,삽입,수정 등 작업을 지원
데이터 추출-사용자가 조회하는 데이터를 추출
데이터 제어-데이터베이스 사용자를 생성, 접근을 제어 백업과 회복, 동시성 제어

데이터 모델(관계 데이터 모델 중요)
계층, 네트워크 모델은 포인터 사용
관계는 주키, 외래키(속성값)를 사용(포인터가 아닌)(가시성 좋음), 수학적으로 증명이 완료(반박x) --> 가장 중요
객체는 object id(객체 식별자) 사용(가시성 낮음)

3단계 데이터베이스 구조를 그리고 설명하시오
그림, 정의 숙지
외부, 개념, 내부 스키마  
*스키마 : (테이블)릴레이션과 속성값..등 -> 뼈대, frame(틀)
외부(서브) 스키마 : 일반, 응용프로그래머가 접근하는 계층 데이터베이스에서 하나의 논리적부분을 의미-->관심 부분(강의실,특정 지하철 호선), 여러개 있을 수 있음
개념 스키마 : 전체 데이터베이스의 정의를 의미, DBA가 관리 -->건물, 즉 전체
내부 스키마 : 물리적인것, 저장장치에 데이터베이스가 실제로 저장되는 방법의 표현-> 건물의 소재, 층 수 
외부/개념 매핑:외부와 개념 스키마 간의 매핑, 외부가 개념 어디 부분에 해당되는가
개념/내부 매핑:개념과 내부 스키마가 어떻게 어디에 저장되는지 대응, 개념이 내부의 물리정 장치 어디에 어떤 방법으로
테이블(릴레이션)안에는 속성! ex 학생 테이블에는 학번,이름,주소,학년 ->이런게 속성

중요
왜 3단계인가? --> 데이터 독립성을 추구하기 위해서
즉 하위 스키마를 변경하더라도 상위 스키마가 영향을 받지 않는

데이터 독립성  시험!!!!
논리적 데이터 독립성:외부 스키마와 개념 스키마 사이의 독립성 한쪽 스키마의 변경이 영향을 끼치지 않음
물리적 데이터 독립성:개념 스키마와 내부 스키마 사이의 독립성 마찬가지로 영향 x, 구현 쉬움(논리보다) //4주차

데이터 모델이 어떠한 것을 사용하는지 시험!!
계층,네트워크 모델은 포인터
관계 데이터 모델은 속성값(외래키)

3단계 데이터베이스 구조(그림+설명)시험 !!!!
외부스키마    개념스키마                 내부스키마
(내 강의실)  (브릿지관)  (건물은 어떤걸로? 콘트리트) 물리적

데이터 독립성 논리, 물리 시험에 나와용

2장 시작
Relation-관계, 테이블이라고 불리기도 한다. 행과 열로 구성된 테이블
관계는 릴레이션 간에 생성, 릴레이션 내(데이터들)의 생성이 있다

스키마 : 프레임? 틀?    테이블의 이름과 속성까지가 스키마
ex)회원:회원이름, 전화번호, ..  -> 스키마이다.
 -> 1. 위성영 : 0101~~  -인스턴스 

(중요)
결국 스키마는 뼈대  내포도 스키마와 같은 의미로 통용
릴레이션 스키마 - 릴레이션에 어떤 정보가 담길 지 정의(릴레이션의 모든 속성)
속성-릴레이션 스키마의 열
투플-릴레이션의 각 행, 즉 레코드, 레코드는 공식적으로 투플이라고 불린다.
인스턴스-릴레이션 스키마에 저장된 데이터의 집합 
속성에 들어갈 수 있는 값들의 집합 - 도메인(도서 테이블이라면 이름:char ->도메인인것)
도메인 : 하나의 속성이 취할 수 있는 동일한 유형의 원자값들의 집합(속성이 도서이름이라면 그때 char타입만 들어가도록)
속성의 개수 - 차수
릴레이션의 행 - 튜플(서로 중복되지 않아야 함)
카디널리티 : 튜플(행)의 개수
도메인 : 하나의 속성이 취할 수 있는 동일한 유형의 원자값들의 집합
+표의 릴레이션 용어 숙지 ppt 10-11page

릴레이션의 특징 중요
속성은 단일 값
속성은 서로 다른 이름
한 속성의 값은 모두 같은 도메인 값
속성의 순서는 상관 없음
릴레이션 내의 중복된 투플은 허용 x
투플의 순서는 상관 없음
모든 속성 값은 원자값이다.
또한 속성의 값은 단일값이여야함
//

무결성 제약조건
특정 투플을 식별!할 때 사용하는 속성, 속성의 집합  --> key
릴레이션은 중복 투플을 허용하지 않음 따라서 투플의 속성이 하나 이상은 값이 달라야함
키는 투플을 구별할 수 있어야함!
릴레이션 간의 관계를 맺을 때 사용!!!!!

투플을 유일하게 식별할 수 있는 하나의 속성 혹은 속성의 집합 --> 슈퍼 키(중요)
유일하게 투플을 식별할 수 있다면 모두 슈퍼키가 될 수 있다.
ex) 고객번호, 주민번호, 이름+주민번호 등

투플을 유일하게 식별할 수 있는 속성의 최소! 집합 --> 후보 키(중요)
즉 2개 이상의 속성으로 이루어진 키는 = 복합키

기본 키! 후보 키 중 하나를 선정한 것 -> 주키, 메인 키 primary key  (제일 중요)
최대한 적은 수의 속성을 가져야함, 변동 x, NULL값 x

기본 키로 선정되지 않은 후보 키 -> 대체 키

가상의 속성을 만들어 기본키로 삼는 경우 -> 대리 키(인조 키)
ex) 일련번호 따라서 직관적으로 그 값의 의미를 알기 어려움

외래 키 : 릴레이션간의 관계를 표현(관계 데이터 모델의 특징)
다른 릴레이션의 기본키를 참조하는 속성을 말함. ->정의
특징
다른 릴레이션의 기본키를 참조하는 속성이다.
대응되는 릴레이션의 도메인은 서로 같아야함
기본키가 바뀌면 외래키도 바뀜
NULL,중복이 허용된다. 
외래키는 기본키의 일부가 될 수 있다?
자기 자신의 기본키를 참조하는 외래키도 가능

