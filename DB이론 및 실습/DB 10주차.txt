DB 10주차

2장에서는 5~6문제
3장에서 15문제 이상

테이블의 속성들
초록색 글씨가 기본키


릴레이션 스키마
- 속성(attribute) : 릴레이션 스키마의 열
- 도메인(domain) : 속성이 가질 수 있는 값의 집합
- 차수(degree) : 속성의 개수

스키마의 표현
- 릴레이션 이름(속성1 : 도메인1, 속성2 : 도메인2, 속성3 : 도메인3 …)
  - 예) 도서 (도서번호, 도서이름, 출판사, 가격) 
  - 도서 (도서번호:integer, 도서이름:char(40), 출판사:char(40), 가격:integer)) 


릴레이션의 특징
속성은 단일 값을 가진다
- 각 속성의 값은 도메인에 정의된 값만을 가지며 그 값은 모두 단일 값이여야 함.

속성은 서로 다른 이름을 가진다
- 속성은 한 릴레이션에서 서로 다른 이름을 가져야만 함.

한 속성의 값은 모두 같은 도메인 값을 가진다
- 한 속성에 속한 열은 모두 그 속성에서 정의한 도메인 값만 가질 수 있음.

속성의 순서는 상관없다
- 속성의 순서가 달라도 릴레이션 스키마는 같음.
   예) 릴레이션 스키마에서 (이름, 주소) 순으로 속성을 표시하거나 (주소, 이름) 순으로 표시하여도 상관없음.

릴레이션 내의 중복된 투플은 허용하지 않는다
- 하나의 릴레이션 인스턴스 내에서는 서로 중복된 값을 가질 수 없음. 즉 모든 투플은 서로 값이 달라야 함.

투플의 순서는 상관없다
- 투플의 순서가 달라도 같은 릴레이션임. 관계 데이터 모델의 투플은 실제적인 값을 가지고 있으며 이 값은 
   시간이 지남에 따라 데이터의 삭제, 수정, 삽입에 따라 순서가 바뀔 수 있음.

도메인 - 속성이 나타낼수있는 값의 집합


키 기말고사 중요@@ 종류도@@@
키
- 특정 투플을 식별할 때 사용하는 속성 혹은 속성의 집합
- 릴레이션은 중복된 투플을 허용하지 않기 때문에 각각의 투플에 포함된 속성들 중 어느 하나(혹은 하나 이상)는 값이 달라야 함. 
	즉 키가 되는 속성(혹은 속성의 집합)은 반드시 값이 달라서 투플들을 서로 구별할 수 있어야 함
- 키는 릴레이션 간의 관계를 맺는 데도 사용


기본키
- 여러 후보키 중 하나를 선정하여 대표로 삼는 키
- 후보키가 하나뿐이라면 그 후보키를 기본키로 사용하면 되고 여러 개라면 릴레이션의 특성을 반영하여 하나를 선택하면 됨. 
- 기본키 선정 시 고려사항
  - 릴레이션 내 투플을 식별할 수 있는 고유한 값을 가져야 함.@
  - NULL 값은 허용하지 않음.@
  - 키 값의 변동이 일어나지 않아야 함.@
  - 최대한 적은 수의 속성을 가진 것이라야 함.@ (하나 혹은 두개)
  - 향후 키를 사용하는 데 있어서 문제 발생 소지가 없어야 함.
  - 릴레이션 스키마를 표현할 때 기본키는 밑줄을 그어 표시함
	  릴레이션 이름(속성1, 속성2, …. 속성N)
	  EX) 고객(고객번호, 이름, 주민번호, 주소, 핸드폰)
              도서(도서번호, 도서이름, 출판사, 가격)


슈퍼키
투플을 유일하게 식별할 수 있는 하나의 속성 혹은 속성의 집합
- 투플을 유일하게 식별할 수 있는 값이면 모두 슈퍼키가 될 수 있음 

(고객 릴레이션 예) 
- 고객번호 : 고객별로 유일한 값이 부여되어 있기 때문에 투플을 식별할 수 있음.
- 이름 : 동명이인이 있을 경우 투플을 유일하게 식별할 수 없음.
- 주민번호 : 개인별로 유일한 값이 부여되어 있기 때문에 투플을 식별할 수 있음.
- 주소 : 가족끼리는 같은 정보를 사용하므로 투플을 식별할 수 없음.
- 핸드폰 : 한 사람이 여러 개의 핸드폰을 사용할 수 있고 반대로 핸드폰을 사용하지 
              않는 사람이 있을 수 있기 때문에 투플을 식별할 수 없음.
 
고객 릴레이션은 고객번호와 주민번호를 포함한 모든 속성의 집합이 슈퍼키가 됨. @
	EX) (주민번호), (주민번호, 이름), (주민번호, 이름, 주소), (주민번호, 이름, 핸드폰),
	      (고객번호), (고객번호, 이름, 주소), (고객번호, 이름, 주민번호, 주소, 핸드폰) 등


후보키@
투플을 유일하게 식별할 수 있는 속성의 최소 집합
 (주문 릴레이션 예) 
- 고객번호 : 한 명의 고객이 여러 권의 도서를 구입할 수 있으므로 후보키가 될 수 없음. 고객번호가 1인 박지
	성 고객은 세 번의 주문 기록이 있으므로 투플을 유일하게 식별할 수 없음.  
- 도서번호 : 도서번호가 2인 ‘축구아는 여자’는 두 번의 주문 기록이 있으므로 투플을 유일하게 식별할 수 없음.

- 주문 릴레이션의 후보키는 2개의 속성을 합한 (고객번호, 도서번호)가 됨. @
  참고로 이렇게 2개 이상의 속성으로 이루어진 키를 복합키(composite key)라고 함@@


대리키
- 기본키가 보안을 요하거나, 여러 개의 속성으로 구성되어 복잡하거나, 마땅한 기본키가 없을 때는 일련번호 같은 
  가상의 속성을 만들어 기본키로 삼는 경우가 있음. 이러한 키를 대리키(surrogate key) 혹은 인조키(artificial key)라고 함. 
- 대리키는 DBMS나 관련 소프트웨어에서 임의로 생성하는 값으로 사용자가 직관적으로 그 값의 의미를 알 수 없음.
키라고 설명하기 어렵다


대체키
- 대체키(alternate key)는 기본키로 선정되지 않은 후보키를 말함. 
- 고객 릴레이션의 경우 고객번호와 주민번호 중 고객번호를 기본키로 정하면 주민번호가 대체키가 됨.


왜래키
- 다른 릴레이션의 기본키를 참조하는 속성을 말함. 다른 릴레이션의 기본키를 참조하여 관계 데이터 
   모델의 특징인 릴레이션 간의 관계(relationship)를 표현함.

외래키의 특징
- 관계 데이터 모델의 릴레이션 간의 관계를 표현함.
- 다른 릴레이션의 기본키를 참조하는 속성임.
- 참조하고(외래키) 참조되는(기본키) 양쪽 릴레이션의 도메인은 서로 같아야 함.
- 참조되는(기본키) 값이 변경되면 참조하는(외래키) 값도 변경됨.
- NULL 값과 중복 값 등이 허용됨.
- 자기 자신의 기본키를 참조하는 외래키도 가능함.
- 외래키가 기본키의 일부가 될 수 있음.


키 - 내용 요약
슈퍼키 - 릴레이션 내 투플을 식별할 수 있는 속성의 집합
기본키 - 후보키 중 선정된 키
대체키 - 기본키로 선정되지 않은 후보키
후보키 - 투플을 식별할 수 있는 속성의 최소 집합
외래키 - 다른 릴레이션에서 기본키를 참조해서 사용하는것
	    - 외래키 사용 시 참조하는 릴레이션과 참조되는 릴레이션이 꼭 다른 릴레이션일 필요는 없음. 
		즉 자기 자신의 기본키를 참조할 수도 있음.
기본키, 외래키@@


무결성 제약조건@@@

데이터 무결성(integrity, 無缺性)
- 데이터베이스에 저장된 데이터의 일관성과 정확성을 지키는 것을 말함.

도메인 무결성 제약조건
- 도메인 제약(domain constraint)이라고도 하며, 릴레이션 내의 투플들이 각 속성의 도메인에 지정된 값만을 가져야 한다는 조건
- SQL 문에서 데이터 형식(type), 널(null/not null), 기본 값(default), 체크(check) 등을 사용하여 지정할 수 있음.

개체 무결성 제약조건
- 기본키 제약(primary key constraint)이라고도 함. 
- 릴레이션은 기본키를 지정하고 그에 따른 무결성 원칙 즉, 기본키는 NULL 값을 가져서는 안 되며 릴레이션 내에 오직 하나의 값만 존재해야 한다는 조건임.

참조 무결성 제약조건
- 외래키 제약(foreign key constraint)이라고도 하며, 릴레이션 간의 참조 관계를 선언하는 제약조건
- 자식 릴레이션의 외래키는 부모 릴레이션의 기본키와 도메인이 동일해야 하며, 자식 릴레이션의 값이 변경될 때 부모 릴레이션의 제약을 받는다는 것
   기본키를 참조하고있는 다른 릴레이션에서 외래키로 사용중이면 그 기본키를 지울수없다
	두개 테이블이 서로 참조하고있는 키가 있으면 테이블을 지울수없다 그게 참조 무결성 제약조건@


삭제
- 학과(부모 릴레이션) : 참조하는 테이블을 같이 삭제할 수 있어서 금지하거나 다른 추가 작업이 필요함.
- 학생(자식 릴레이션) : 바로 삭제 가능함. 

※ 부모 릴레이션에서 투플을 삭제할 경우 참조 무결성 조건을 수행하기 위한 고려사항@
- 즉시 작업을 중지
- 자식 릴레이션의 관련 투플을 삭제
- 초기에 설정된 다른 어떤 값으로 변경
- NULL 값으로 설정

수정
- 삭제와 삽입 명령이 연속해서 수행됨.
- 부모 릴레이션의 수정이 일어날 경우 삭제 옵션에 따라 처리된 후 문제가 없으면 다시 삽입 
- 제약조건에 따라 처리됨.

참조 무결성 제약조건의 옵션@@@
RESTRICTED(제한) - 자식 릴레이션에서 참조하고 있으면 부모 릴레이션의 삭제 작업을 거부함
			예 - 학과 릴레이션의 투플 삭제 거부
CASCADE(강제) - 자식 릴레이션의 관련 투플을 같이 삭제함
			예 - 학생 릴레이션의 관련 투플을 삭제
DEFAULT(기본값) - 자식 릴레이션의 관련 투플을 미리 설정해 둔 값으로 변경ㅎ마
			예 - 학생 릴레이션의 학과가 다른 학과로 자동 배정
NULL(널값) - 자식 릴레이션의 관련 투플을 NULL 값으로 설정함(NULL 값을 허가한 경우)
			예 - 학생 릴레이션의 학과가 NULL 값으로 변경

2-43
셀렉션@
- 릴레이션의 투플을 추출하기 위한 연산임. 하나의 릴레이션을 대상으로 하는 단항 연산자며, 
	찾고자 하는 투플의 조건(predicate)을 명시하고 그 조건에 만족하는 투플을 반환함. 
- 형식 : σ<조건> (R)   (R은 릴레이션, σ 는 그리스 문자이며 대문자는 Σ )
질의 2-1 마당서점에서 판매하는 도서 중 8000원 이하인 도서를 검색하시오.
	답 : 가격 <= 8000(도서)@@@


프로젝션@
- 릴레이션의 속성을 추출하기 위한 연산으로 단항 연산자임.
- 형식 : π<속성리스트> (R)  (R은 릴레이션, π 는 그리스 문자이며 대문자는 Π )

질의 2-2 신간도서 안내를 위해 고객의(이름, 주소, 핸드폰)이 적힌 카탈로그 주소록을 만드시오
π 이름, 주소, 핸드폰 (고객)@@@

카티전 프로덕트
- 두 릴레이션을 연결시켜 하나로 합칠 때 사용함. 결과 릴레이션은 첫 번째 릴레이션의 
  오른쪽에 두 번째 릴레이션의 모든 투플을 순서대로 배열하여 반환함. 결과 릴레이션의 차수는 두 릴레이션의 차수의 합이며, 
  카디날리티는 두 릴레이션의 카디날리티의 곱임.
카티전 프로덕트 때문에 성능이 저하될수있다 데이터가 배가 되기때문에





